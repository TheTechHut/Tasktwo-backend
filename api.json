{
  "openapi": "3.1.0",
  "info": {
    "title": "Ticketing System API",
    "description": "REST API for customers, agents, and admins to manage support tickets.",
    "version": "1.0.0"
  },
  "paths": {
    "/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "operationId": "login_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/tickets/": {
      "get": {
        "tags": ["Tickets", "Tickets"],
        "summary": "Get All Tickets",
        "description": "Retrieve all tickets from the system.\nOnly accessible by users with 'admin' or 'agent' roles.",
        "operationId": "get_all_tickets_tickets_tickets__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TicketResponse"
                  },
                  "type": "array",
                  "title": "Response Get All Tickets Tickets Tickets  Get"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/tickets/{ticket_id}": {
      "get": {
        "tags": ["Tickets", "Tickets"],
        "summary": "Get Ticket",
        "description": "Retrieve a specific ticket by ID.\nAdmins/Agents can access any ticket.\nCustomers can only view their own tickets.",
        "operationId": "get_ticket_tickets_tickets__ticket_id__get",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Ticket Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Tickets", "Tickets"],
        "summary": "Update Ticket Status",
        "description": "Allows agents to update the status and resolution notes of a ticket.",
        "operationId": "update_ticket_status_tickets_tickets__ticket_id__patch",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Ticket Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Status"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resolution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/tickets/{ticket_id}/asPsAiTgCnH": {
      "patch": {
        "tags": ["Tickets", "Tickets"],
        "summary": "Assign Ticket",
        "description": "Allows admins to assign a ticket to an agent.\nAlso updates the ticket status to 'Assigned'.",
        "operationId": "assign_ticket_tickets_tickets__ticket_id__asPsAiTgCnH_patch",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Ticket Id"
            }
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Agent Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/tickets/embed/{token}": {
      "get": {
        "tags": ["Tickets", "Tickets"],
        "summary": "Get Embedded Ticket",
        "description": "Public access to ticket data via token.\nUseful for chatbot integrations or sharing without login.",
        "operationId": "get_embedded_ticket_tickets_tickets_embed__token__get",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/tickets/generate_embed_token/{ticket_id}": {
      "get": {
        "tags": ["Tickets", "Tickets"],
        "summary": "Generate Token",
        "description": "Utility route for generating a test embed token for a ticket.",
        "operationId": "generate_token_tickets_tickets_generate_embed_token__ticket_id__get",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Ticket Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/tickets/embed_simple/{embed_token}": {
      "get": {
        "tags": ["Tickets", "Tickets"],
        "summary": "Get Ticket Embed",
        "description": "Returns a minimal public view of the ticket with subject, status, and link.",
        "operationId": "get_ticket_embed_tickets_tickets_embed_simple__embed_token__get",
        "parameters": [
          {
            "name": "embed_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Embed Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketEmbedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "format": "password",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login_login_post"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "TicketEmbedResponse": {
        "properties": {
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "status": {
            "$ref": "#/components/schemas/TicketStatus"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          },
          "link": {
            "type": "string",
            "title": "Link"
          }
        },
        "type": "object",
        "required": ["subject", "status", "last_updated", "link"],
        "title": "TicketEmbedResponse",
        "description": "Schema for representing a lightweight, embedded view of a ticket."
      },
      "TicketResponse": {
        "properties": {
          "ticket_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ticket Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/TicketStatus"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "ticket_id", "user_id", "agent_id", "subject", "description",
          "status", "priority", "created_at", "updated_at"
        ],
        "title": "TicketResponse",
        "description": "Full representation of a ticket as returned from the database or API."
      },
      "TicketStatus": {
        "type": "integer",
        "enum": [1, 2, 3, 4],
        "title": "TicketStatus",
        "description": "Enum for representing the status of a support ticket.\n\nThe integer values are stored in the database for efficiency,\nbut the strings can be used in logic and APIs."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
